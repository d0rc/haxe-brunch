// Generated by CoffeeScript 1.9.1
(function() {
  var HaxeBrunchCompiler;

  module.exports = HaxeBrunchCompiler = (function() {
    HaxeBrunchCompiler.prototype.brunchPlugin = true;

    HaxeBrunchCompiler.prototype.type = 'javascript';

    function HaxeBrunchCompiler(config) {
      var cfg, ref, ref1, ref2;
      this.config = config;
      cfg = (ref = (ref1 = this.config.plugins) != null ? ref1.haxe : void 0) != null ? ref : {};
      this.extension = (ref2 = cfg.extension) != null ? ref2 : "hxml";
      null;
    }

    HaxeBrunchCompiler.prototype.compile = function(data, path, callback) {
      var basename, child, dirname, exec, fs, pu;
      exec = require('child_process').exec;
      fs = require('fs');
      pu = require('path');
      dirname = pu.dirname(path);
      basename = pu.basename(path);
      return child = exec("cd " + dirname + "; haxe " + basename + " -js /tmp/test.js", function(err, stdout, stderr) {
        var compiled;
        if (err != null) {
          console.log("Failed to compile " + path + ": ", err);
          return callback(err);
        } else {
          console.log("errors: " + stderr);
          compiled = fs.readFileSync("/tmp/test.js");
          if (!compiled) {
            return callback("failed to read compiled file");
          } else {
            return callback(null, {
              data: compiled.toString()
            });
          }
        }
      });
    };

    return HaxeBrunchCompiler;

  })();

}).call(this);
